# apps/elastic-stack.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: elasticsearch
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  project: default
  source:
    repoURL: https://helm.elastic.co
    targetRevision: 8.5.1
    chart: elasticsearch
    helm:
      values: |
        clusterName: "elasticsearch"
        nodeGroup: "master"
        roles: [master, data, data_content, data_hot, data_warm, data_cold, ingest, ml, remote_cluster_client, transform]
        replicas: 1
        imageTag: "8.5.1"
        resources:
          requests:
            cpu: "1000m"
            memory: "2Gi"
          limits:
            cpu: "1000m"
            memory: "2Gi"
        volumeClaimTemplate:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 30Gi
        securityContext:
          runAsUser: 1000
        podSecurityContext:
          fsGroup: 1000
        createCert: true
        secret:
          enabled: true
  destination:
    server: https://kubernetes.default.svc
    namespace: elastic-stack
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kibana
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  project: default
  source:
    repoURL: https://helm.elastic.co
    targetRevision: 8.5.1
    chart: kibana
    helm:
      values: |
        elasticsearchHosts: "https://elasticsearch-master:9200"
        elasticsearchCertificateSecret: elasticsearch-master-certs
        elasticsearchCredentialSecret: elasticsearch-master-credentials
        replicas: 1
        resources:
          requests:
            cpu: "1000m"
            memory: "2Gi"
        service:
          type: LoadBalancer
        securityContext:
          runAsUser: 1000
  destination:
    server: https://kubernetes.default.svc
    namespace: elastic-stack
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: logstash
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  project: default
  source:
    repoURL: https://helm.elastic.co
    targetRevision: 8.5.1
    chart: logstash
    helm:
      values: |
        replicas: 1
        logstashPipeline:
          logstash.conf: |
            input {
              beats {
                port => 5044
              }
            }
            output {
              elasticsearch {
                hosts => "https://elasticsearch-master:9200"
                cacert => "/usr/share/logstash/config/elasticsearch-master-certs/ca.crt"
                user => '${ELASTICSEARCH_USERNAME}'
                password => '${ELASTICSEARCH_PASSWORD}'
              }
            }
        extraEnvs:
          - name: "ELASTICSEARCH_USERNAME"
            valueFrom:
              secretKeyRef:
                name: elasticsearch-master-credentials
                key: username
          - name: "ELASTICSEARCH_PASSWORD"
            valueFrom:
              secretKeyRef:
                name: elasticsearch-master-credentials
                key: password
        secretMounts:
          - name: "elasticsearch-master-certs"
            secretName: "elasticsearch-master-certs"
            path: "/usr/share/logstash/config/elasticsearch-master-certs"
        resources:
          requests:
            cpu: "100m"
            memory: "1536Mi"
        service:
          ports:
            - name: beats
              port: 5044
  destination:
    server: https://kubernetes.default.svc
    namespace: elastic-stack
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: filebeat
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  project: default
  source:
    repoURL: https://helm.elastic.co
    targetRevision: 8.5.1
    chart: filebeat
    helm:
      values: |
        daemonset:
          enabled: true
          filebeatConfig:
            filebeat.yml: |
              filebeat.inputs:
              - type: container
                paths:
                  - /var/log/containers/*.log
                processors:
                - add_kubernetes_metadata:
                    host: ${NODE_NAME}
              output.logstash:
                hosts: ["logstash-logstash:5044"]
          secretMounts:
            - name: elasticsearch-master-certs
              secretName: elasticsearch-master-certs
              path: /usr/share/filebeat/certs/
          securityContext:
            runAsUser: 0
          resources:
            requests:
              cpu: "100m"
              memory: "100Mi"
        deployment:
          enabled: false
  destination:
    server: https://kubernetes.default.svc
    namespace: elastic-stack
  syncPolicy:
    automated:
      prune: true
      selfHeal: true